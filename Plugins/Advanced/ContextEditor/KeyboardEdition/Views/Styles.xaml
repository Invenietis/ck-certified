<ResourceDictionary 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrls="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
             xmlns:ckwincore="clr-namespace:CK.Windows;assembly=CK.Windows.Core"
             xmlns:view="clr-namespace:CK.WPF.StandardViews;assembly=CK.WPF.StandardViews"
             xmlns:vm="clr-namespace:ContextEditor.ViewModels"
             xmlns:cce="clr-namespace:Microsoft.Windows.Controls;assembly=CK.WPF.Controls"
             xmlns:local="clr-namespace:ContextEditor.s"
             mc:Ignorable="d">
    <ctrls:NotNullConverter x:Key="notnull"/>
    <ctrls:NotConverter x:Key="notconverter"/>

    <Style TargetType="Border" x:Key="Rounded">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
    </Style>
    <Style TargetType="Border" x:Key="Splitter">
        <Setter Property="BorderThickness" Value="0 0 0 0.5"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinHeight" Value="40"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Style="{StaticResource Rounded}" >
                        <ContentPresenter Margin="2"  VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FFEFEFEF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type cce:ColorPicker}">
        <Setter Property="Width" Value="41"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
    </Style>
    <Style TargetType="ctrls:ImageButton">
        <Setter Property="Source" Value="/ContextEditor;component/Resources/Images/delete.png"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Margin" Value="0 0 10 0" />
        <Setter Property="Command" Value="{Binding ClearPropertyCmd}"/>
    </Style>

    <Style TargetType="{x:Type view:StdKeyboardView}">
        <Setter Property="Width" Value="{Binding W}" />
        <Setter Property="Height" Value="{Binding H}" />
        <Setter Property="Keys" Value="{Binding Keys}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=BackgroundImagePath, Converter={StaticResource notnull}}" Value="true">
                <Setter Property="BackgroundImagePath" Value="{Binding BackgroundImagePath}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type view:StdKeyView}">
        <Setter Property="KeyPressedCommand" Value="{Binding KeyPressedCommand}"/>
        <Setter Property="TextDecorations" Value="{Binding TextDecorations}"/>
        <Setter Property="KeyDownCommand" Value="{Binding KeyDownCommand}"/>
        <Setter Property="KeyUpCommand" Value="{Binding KeyUpCommand}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
        <Setter Property="DownLabel" Value="{Binding DownLabel}"/>
        <Setter Property="FontStyle" Value="{Binding FontStyle}"/>
        <Setter Property="ShowLabel" Value="{Binding ShowLabel}"/>
        <Setter Property="Visibility" Value="{Binding Visible}"/>
        <Setter Property="FontSize" Value="{Binding FontSize}"/>
        <Setter Property="UpLabel" Value="{Binding UpLabel}"/>
        <Setter Property="Opacity" Value="{Binding Opacity}"/>
        <Setter Property="Height" Value="{Binding Height}"/>
        <Setter Property="Width" Value="{Binding Width}"/>
    </Style>

    <DataTemplate DataType="{x:Type vm:VMKeyEditable}">
        <view:StdKeyView x:Name="key">
            <view:StdKeyView.Background>
                <SolidColorBrush Color="{Binding Background}"/>
            </view:StdKeyView.Background>
            <view:StdKeyView.HoverBackground>
                <SolidColorBrush Color="{Binding HoverBackground}"/>
            </view:StdKeyView.HoverBackground>
            <view:StdKeyView.PressedBackground>
                <SolidColorBrush Color="{Binding PressedBackground}"/>
            </view:StdKeyView.PressedBackground>
            <view:StdKeyView.Foreground>
                <SolidColorBrush Color="{Binding LetterColor}"/>
            </view:StdKeyView.Foreground>
        </view:StdKeyView>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Image, Converter={StaticResource notnull}}" Value="true">
                <Setter TargetName="key" Property="ShowLabel" Value="false"/>
                <Setter TargetName="key" Property="CustomContent" Value="{Binding Image}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>
