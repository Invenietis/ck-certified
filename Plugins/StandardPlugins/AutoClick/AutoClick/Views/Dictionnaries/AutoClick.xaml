<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="clr-namespace:CK.StandardPlugins.AutoClick.Views"
    xmlns:converters="clr-namespace:CK.StandardPlugins.AutoClick.Converters"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:b="clr-namespace:CK.StandardPlugins.AutoClick.Behaviors"
    xmlns:lib="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Standard Styles/Brush from Windows' button -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <!---->
    
    <lib:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InstructionToImageConverter x:Key="InstructionToImageConverter" />
    <converters:PathToImageConverter x:Key="PathToImageConverter" />

    <!-- Pie Brush -->
    <LinearGradientBrush x:Key="pieIndicatorBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="LightGreen"></GradientStop>
        <GradientStop Offset="1" Color="DarkGreen"></GradientStop>
    </LinearGradientBrush>

    <!-- BlackButton -->
    <DrawingImage x:Key="BlackButtonImage">
        <DrawingImage.Drawing>
            <GeometryDrawing Geometry="F1 M 318.939,102L 425,102C 454.271,102 478,125.729 478,155L 478,249C 478,278.271 454.271,302 425,302L 318.939,302C 289.668,302 265.939,278.271 265.939,249L 265.939,155C 265.939,125.729 289.668,102 318.939,102 Z ">
                <GeometryDrawing.Pen>
                    <Pen Thickness="15" LineJoin="Round">
                        <Pen.Brush>
                            <LinearGradientBrush StartPoint="0.505421,0.0441767" EndPoint="0.505421,1.57843">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FF878787" Offset="0"/>
                                    <GradientStop Color="#FF434343" Offset="0.127854"/>
                                    <GradientStop Color="#FF000000" Offset="0.995434"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Pen.Brush>
                    </Pen>
                </GeometryDrawing.Pen>
                <GeometryDrawing.Brush>
                    <LinearGradientBrush StartPoint="0.505804,0.00998992" EndPoint="0.505804,1.65931">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FF000000" Offset="0"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </GeometryDrawing.Brush>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- GrayButton -->
    <DrawingImage x:Key="GrayButtonImage">
        <DrawingImage.Drawing>
            <GeometryDrawing Geometry="F1 M 318.939,102L 425,102C 454.271,102 478,125.729 478,155L 478,249C 478,278.271 454.271,302 425,302L 318.939,302C 289.668,302 265.939,278.271 265.939,249L 265.939,155C 265.939,125.729 289.668,102 318.939,102 Z ">
                <GeometryDrawing.Pen>
                    <Pen Thickness="15" LineJoin="Round">
                        <Pen.Brush>
                            <LinearGradientBrush StartPoint="0.519639,0.177698" EndPoint="0.519639,1.75947">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFDDDDDD" Offset="0"/>
                                    <GradientStop Color="#FFA8A8A8" Offset="0.127854"/>
                                    <GradientStop Color="#FF737373" Offset="0.995434"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Pen.Brush>
                    </Pen>
                </GeometryDrawing.Pen>
                <GeometryDrawing.Brush>
                    <LinearGradientBrush StartPoint="0.521112,0.153525" EndPoint="0.521112,1.85394">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FF818181" Offset="0"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </GeometryDrawing.Brush>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- PieProgressBar Template -->
    <ControlTemplate x:Key="PieProgressBarTemplate">
        <ControlTemplate.Resources>
            <converters:ValueToPointConverter x:Key="ValueToPointConverter"/>
            <converters:ValueToIsLargeArcConverter x:Key="ValueToIsLargeArcConverter"/>
            <LinearGradientBrush x:Key="backgroundBrush" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Offset="0" Color="LightGray" />
                <GradientStop Offset="1" Color="Gray" />
            </LinearGradientBrush>
        </ControlTemplate.Resources>
        <Viewbox>
            <Grid Height="20" Width="20">
                <Ellipse x:Name="background" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"
                         Width="20" Height="20" Fill="Transparent"/>
                <Image Margin="2" Name="pauseImage" Width="14" Height="14" Source="/AutoClick;component/Res/Images/Pause.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Image Margin="2" Name="playImage" Width="14" Height="14" Source="/AutoClick;component/Res/Images/Play.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Image x:Name="pie" Stretch="None" Width="20" Height="20" VerticalAlignment="Top" HorizontalAlignment="Center" >
                    <Image.Source>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Brush="{StaticResource pieIndicatorBrush}">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="0.001"/>
                                    </GeometryDrawing.Pen>
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,10">
                                                    <LineSegment Point="20,10"/>
                                                </PathFigure>
                                            </PathGeometry>
                                            <CombinedGeometry GeometryCombineMode="Exclude">
                                                <CombinedGeometry.Geometry1>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="10,10" IsClosed="True">
                                                            <LineSegment Point="10,0" />
                                                            <ArcSegment Size="10,10" SweepDirection="Clockwise">
                                                                <ArcSegment.Point>
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" Converter="{StaticResource ValueToPointConverter}"></Binding>
                                                                </ArcSegment.Point>
                                                                <ArcSegment.IsLargeArc>
                                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" Converter="{StaticResource ValueToIsLargeArcConverter}"></Binding>
                                                                </ArcSegment.IsLargeArc>
                                                            </ArcSegment>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </CombinedGeometry.Geometry1>
                                                <CombinedGeometry.Geometry2>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="10,10" IsClosed="True">
                                                            <LineSegment Point="10,2" />
                                                            <ArcSegment Size="8,8" SweepDirection="Clockwise" Point="9.9,2" IsLargeArc="True">                   
                                                            </ArcSegment>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </CombinedGeometry.Geometry2>
                                            </CombinedGeometry>
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Image.Source>
                </Image>
            </Grid>
        </Viewbox>
        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="views:WPFClickTypeWatch.IsPaused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="pie" Property="Opacity" Value="0.01" />                        <!--Stopped + show PauseImage-->
                <Setter TargetName="pauseImage" Property="Opacity" Value="1" />
                <Setter TargetName="playImage" Property="Opacity" Value="0.01" />
                <Setter TargetName="background" Property="Fill" Value="{StaticResource backgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />                     <!--Running + show PlayImage-->
                    <Condition Property="views:WPFClickTypeWatch.IsPaused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="pie" Property="Opacity" Value="1"  />
                <Setter TargetName="playImage" Property="Opacity" Value="1" />
                <Setter TargetName="playImage" Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="White" GlowSize="5" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="pauseImage" Property="Opacity" Value="0.01"  />
                <Setter TargetName="background" Property="Fill" Value="{StaticResource backgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>                    
                    <Condition Property="IsMouseOver" Value="False" />                 <!--Running + no show + no bg brush-->
                    <Condition Property="views:WPFClickTypeWatch.IsPaused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="pie" Property="Opacity" Value="1" />
                <Setter TargetName="pauseImage" Property="Opacity" Value="0.01" />
                <Setter TargetName="playImage" Property="Opacity" Value="0.01" />
                <!--<Setter TargetName="background" Property="Fill" Value="{StaticResource backgroundBrush}" />--> <!--it is way better with no backgroundbrush when running-->
            </MultiTrigger>            
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />                    <!--Stopped + PauseImage-->
                    <Condition Property="views:WPFClickTypeWatch.IsPaused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="pie" Property="Opacity" Value="0.01" />
                <Setter TargetName="playImage" Property="Opacity" Value="0.01" />
                <Setter TargetName="pauseImage" Property="Opacity" Value="1" />
                <Setter TargetName="pauseImage" Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="White" GlowSize="5" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="background" Property="Fill" Value="{StaticResource backgroundBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- PieProgressBar Style -->
    <Style x:Key="PieProgressBarStyle" TargetType="{x:Type views:WPFClickTypeWatch}">
        <Setter Property="Template" Value="{StaticResource PieProgressBarTemplate}"/>
    </Style>
    
    <!-- ClickTypeButton Template -->
    <ControlTemplate x:Key="ClickTypeButtonTemplate" TargetType="{x:Type views:ActionOnMouseEnterButton}">
        <Grid>
            <Image Name="AutoClickButtonImage" Source="{StaticResource GrayButtonImage}" />
            <!-- ContentPresenter -->
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Image Opacity="0.8" x:Name="ClickImage" Source="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"></Image>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Selected" Value="True">
                <Setter TargetName="AutoClickButtonImage" Property="Source" Value="{StaticResource BlackButtonImage}" />
                <Setter TargetName="ClickImage" Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="White" GlowSize="10" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ClickImage" Property="Opacity" Value="1"/>
            </Trigger>            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ShowEditorButtonTemplate -->
    <!--<ControlTemplate x:Key="ShowEditorButtonTemplate" TargetType="{x:Type views:ActionOnMouseEnterButton}">
        <Grid>
            <Image Name="ConfigurationButtonImage" Source="../../Res/Images/EditorLogo.png" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="views:ActionOnMouseEnterButton.Selected" Value="True">
                <Setter TargetName="ConfigurationButtonImage" Property="Source" Value="../../Res/Images/EditorLogoSelected.png" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <!-- PauseContent -->
    <ContentControl x:Key="PauseContent">
        <Viewbox>
            <Image Source="../../Res/Images/Pause.png"/>
        </Viewbox>
    </ContentControl>
    <!-- PlayContent -->
    <ContentControl x:Key="PlayContent">
        <Viewbox>
            <Image Source="../../Res/Images/Play.png"/>
        </Viewbox>
    </ContentControl>
    <!-- EditorHiddenContent -->
    <ContentControl x:Key="EditorHiddenContent">
        <Viewbox>
            <Image Source="../../Res/Images/EditorLogo.png"/>
        </Viewbox>
    </ContentControl>

    <!-- PauseButtonStyle -->
    <Style x:Key="PauseButtonStyle" TargetType="{x:Type views:ActionOnMouseEnterButton}">
        <Setter Property="Content" Value="{StaticResource PauseContent}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:ActionOnMouseEnterButton}">
                    <Button Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Content="{TemplateBinding Content}">
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="views:ActionOnMouseEnterButton.IsPaused" Value="True">
                <Setter Property="Content" Value="{StaticResource PlayContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- SelectedIsPressedButtonStyle : When the button is selected, it has a "pressed" rendering-->
    <Style x:Key="SelectedIsPressedButtonStyle" TargetType="{x:Type views:ActionOnMouseEnterButton}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type views:ActionOnMouseEnterButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="button" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                                           RenderPressed="{TemplateBinding views:ActionOnMouseEnterButton.Selected}"
                                                           Background="{TemplateBinding Background}"
                                                           BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Microsoft_Windows_Themes:ButtonChrome>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ClickTypeSelector Template -->
    <ControlTemplate x:Key="RunningClickTypeSelectorTemplate">
        <ItemsControl ItemsSource="{Binding ClicksVM}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Viewbox Margin="2">
                        <views:ActionOnMouseEnterButton Content="{Binding ImagePath, Mode=OneWay, Converter={StaticResource PathToImageConverter}}" 
                                                        Width="70" Height="70" FontSize="12" Padding="10"
                                                        Template="{StaticResource ClickTypeButtonTemplate}"                                                        
                                                        MouseEnterCommand="{Binding ChangeSelectionCommand}"
                                                        RenderTransformOrigin="0.5,0.5" 
                                                        Selected="{Binding Path=IsSelected}">
                            <views:ActionOnMouseEnterButton.ToolTip>
                                <TextBlock Text="{Binding Name}" />
                            </views:ActionOnMouseEnterButton.ToolTip>
                        </views:ActionOnMouseEnterButton>
                    </Viewbox>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </ControlTemplate>

    <!-- AutoClickTemplate -->
    <ControlTemplate x:Key="AutoClickTemplate">
        <StackPanel Orientation="Vertical">

            <DockPanel LastChildFill="False">
                <!-- The Pause/Resume button -->
                <!--<views:ActionOnMouseEnterButton Width="20" Height="20" DockPanel.Dock="Left"
                                              MouseEnterCommand="{Binding TogglePauseCommand}" Style="{StaticResource PauseButtonStyle}"                                              
                                              IsPaused="{Binding IsPaused, Mode=OneWay}" />-->
                <!-- The Show/Hide Editor button -->
                <views:ActionOnMouseEnterButton Selected="{Binding IsEditorOpened}"  DockPanel.Dock="Right"
                                              MouseEnterCommand="{Binding ToggleEditorVisibilityCommand}"                                              
                                              Style="{StaticResource SelectedIsPressedButtonStyle}"
                                              Content="{StaticResource EditorHiddenContent}"
                                              Width="20" Height="20" />
            </DockPanel>

            <!-- The pie-shaped progressbar -->
            <views:WPFClickTypeWatch IsPaused="{Binding IsPaused, Mode=OneWay}"  Style="{StaticResource PieProgressBarStyle}" Margin="10" MouseEnterCommand="{Binding TogglePauseCommand}"
                                     Width="50" Height="50"
                                     BorderBrush="LightGray" Value="{Binding ProgressValue, Mode=OneWay}">
            </views:WPFClickTypeWatch>

            <!-- The Panel showing the next click -->
            <!--<Border Padding="3" Margin="8 0 8 3" CornerRadius="5" BorderThickness="1" BorderBrush="White">
                <StackPanel x:Name="NextActionStackPanel" HorizontalAlignment="Center">
                    <TextBlock Foreground="White" FontSize="8" HorizontalAlignment="Center" TextAlignment="Center" Text="Prochaine action : "></TextBlock>
                    <ItemsControl x:Name="NextInstructionsStackPanel" Width="75" ItemsSource="{Binding Selector.ClicksVM.NextClick}" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Image Width="18" Height="24" Source="{Binding Mode=OneWay, Converter={StaticResource InstructionToImageConverter}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>-->

            <!-- The panel containing the clicks -->
            <ContentControl Template="{DynamicResource RunningClickTypeSelectorTemplate}"  DataContext="{Binding Selector}"/>

        </StackPanel>
    </ControlTemplate>

</ResourceDictionary>
