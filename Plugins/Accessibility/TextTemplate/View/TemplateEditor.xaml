<Window x:Class="TextTemplate.TemplateEditor"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:me="clr-namespace:TextTemplate"
            xmlns:r="clr-namespace:TextTemplate.Resource"
            mc:Ignorable="d"   
            ShowInTaskbar="False"
            Width="600"
            MinWidth="100"
            MinHeight="150"
            Topmost="True"
            ResizeMode="CanResize"
            Background="White"
            WindowStyle="ToolWindow"
            SizeToContent="Height">
    <Window.Resources>
        <SolidColorBrush Color="#509be4" x:Key="DefaultColor"/>
        <SolidColorBrush Color="#366897" x:Key="DarkerDefaultColor"/>
        <SolidColorBrush Color="#4f4f4f" x:Key="GrayColor"/>
        <SolidColorBrush Color="#FF4D87B0" x:Key="EditorLightColor"/>
        <SolidColorBrush x:Key="HighlightColor" Color="{Binding Path=HighlightColor}" />
        <SolidColorBrush x:Key="HighlightBackgroundColor" Color="{Binding Path=HighlightBackgroundColor}" />
        <SolidColorBrush x:Key="PlaceholderColor" Color="{Binding Path=PlaceholderColor}" />
        
        <Style TargetType="me:ClickSelectTextBox">
            <Setter Property="TextBox.FontSize" Value="{Binding DataContext.FontSize, RelativeSource={RelativeSource AncestorType=me:TemplateEditor}}" />
            <Setter Property="TextBox.FontWeight" Value="Bold" />
            <Setter Property="TextBox.VerticalContentAlignment" Value="Center" />
            <Setter Property="TextBox.Foreground"  Value="{Binding Source={StaticResource ResourceKey=PlaceholderColor}}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="SelectionBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />

            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=IsHighlighted}" Value="true">
                    <Setter Property="TextBox.Foreground" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                    <Setter Property="TextBox.Foreground" Value="{Binding Source={StaticResource ResourceKey=HighlightColor}}" />
                    <Setter Property="TextBox.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                </DataTrigger>
                <Trigger Property="TextBox.IsFocused" Value="True" >
                    <Setter Property="TextBox.Foreground" Value="{Binding Source={StaticResource ResourceKey=HighlightColor}}" />
                    <Setter Property="TextBox.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                    <Setter Property="TextBox.BorderThickness" Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="me:ContentControlDuFutur" x:Key="textcontrol" >
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate>
                        <Grid ClipToBounds="False">
                            <me:ClickSelectTextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Placeholder="{Binding Text, Mode=OneTime}" Name="textbox" />
                            <Line StrokeDashArray="0.0 2.0 0.0" StrokeThickness="2" Stroke="{StaticResource GrayColor}" Height="1" X1="0" X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}" VerticalAlignment="Bottom" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Label.FontSize" Value="16" />
            <Setter Property="Label.Foreground" Value="#333333" />
            <Setter Property="Label.VerticalAlignment" Value="Center" />
            <Setter Property="Label.HorizontalAlignment" Value="Left" />
            <Setter Property="Label.Padding" Value="0" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource DefaultColor}" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="HorizontalAlignment" Value="Right"  />
            <Setter Property="Margin" Value="10 0 10 0" />
            <Setter Property="BorderBrush" Value="#295884" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="12 6 12 6" />
                
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DarkerDefaultColor}"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FFF"></Setter>
                    <Setter Property="Foreground" Value="{StaticResource DarkerDefaultColor}"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="BorderBrush" Value="Gray"></Setter>
                    <Setter Property="Background" Value="#81b9ee"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  x:Key="ok" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ValidateTemplate.IsHighlighted}" Value="true">
                    <Setter Property="Button.Foreground" Value="{Binding Source={StaticResource ResourceKey=HighlightColor}}" />
                    <Setter Property="Button.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="cancel" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=Cancel.IsHighlighted}" Value="true">
                    <Setter Property="Button.Foreground" Value="{Binding Source={StaticResource ResourceKey=HighlightColor}}" />
                    <Setter Property="TextBox.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <DockPanel VerticalAlignment="Stretch" Margin="0">
        <Border DockPanel.Dock="Top"  Margin="0"  Panel.ZIndex="10" VerticalAlignment="Top" >
            <Border.Style>
                <Style>
                    <Setter Property="Border.Background" Value="{StaticResource ResourceKey=GrayColor}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsWindowHighlighted}" Value="true">
                            <Setter Property="Border.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel>
                <TextBlock Text="{x:Static r:R.TextTemplateTitle}" Foreground="White" FontSize="20" Margin="10 10 0 5" />
                <TextBlock Text="{x:Static r:R.TextTemplateDesc}" Foreground="White" FontSize="14" Margin="10 0 20 10" />
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom" Margin="0"  Panel.ZIndex="10" VerticalAlignment="Top" >
            <Border.Style>
                <Style>
                    <Setter Property="Border.Background" Value="{StaticResource ResourceKey=GrayColor}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsWindowHighlighted}" Value="true">
                            <Setter Property="Border.Background" Value="{Binding Source={StaticResource ResourceKey=HighlightBackgroundColor}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <WrapPanel  HorizontalAlignment="Right"  Margin="10 10 20 10" >
                <Button x:Name="cancel" Command="{Binding Cancel}" Margin="10 0 10 0" Style="{StaticResource ResourceKey=cancel}" Content="{x:Static r:R.Cancel}"  />
                <Button x:Name="ok" Command="{Binding ValidateTemplate}"  Style="{StaticResource ResourceKey=ok}" Content="{x:Static r:R.Validate}" />
            </WrapPanel>
        </Border>
        <ScrollViewer VerticalAlignment="Stretch" Background="Transparent" VerticalScrollBarVisibility="Auto" Panel.ZIndex="0" >
            <StackPanel Margin="10" x:Name="sheet"  HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="White">
            </StackPanel>
        </ScrollViewer>
        
    </DockPanel>
</Window>
