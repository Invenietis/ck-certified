<ck:CKWindow x:Class="ScrollerVisualizer.Visualization"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:n="clr-namespace:ScrollerVisualizer"
            xmlns:h="clr-namespace:HighlightModel;assembly=HighlightModel"
            xmlns:ck="clr-namespace:CK.Windows;assembly=CK.Windows.Core"
            xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
            mc:Ignorable="d"
            WindowStyle="None"
            AllowsTransparency="True"
            Background="Transparent"
            ShowInTaskbar="False"
            Height="Auto"
            SizeToContent="WidthAndHeight"
            Topmost="True"
            Width="Auto"
            ResizeMode="NoResize"
            Opacity="{Binding Path=Elements.Count}">
    <ck:CKWindow.Resources>
        <Storyboard x:Key="slideIn" 
                        Storyboard.TargetName="main" 
                        Storyboard.TargetProperty="Left">

            <DoubleAnimation  Duration="0:0:0.3" 
                              From="{Binding ElementName=main, Path=Left}"  
                              To="0" >
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseIn" Amplitude="2" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="slideOut" 
                        Storyboard.TargetName="main" 
                        Storyboard.TargetProperty="Left" >

            <DoubleAnimation  Duration="0:0:0.3" 
                              From="{Binding ElementName=main, Path=Left}"  
                              To="-100" />
        </Storyboard>
        <Storyboard x:Key="toggleIn" 
                    Storyboard.TargetName="panel" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" >
            <DoubleAnimation  Duration="0:0:0.3" 
                              From="0"  
                              To="1" >
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseIn"  />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="toggleOut" 
                    Storyboard.TargetName="panel"                   
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" >
            <DoubleAnimation To="0" 
                             From="1" 
                             Duration="0:0:0.3" >
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <SolidColorBrush x:Key="highlightedColor" Color="#FFF">
        </SolidColorBrush>
        <SolidColorBrush x:Key="defaultColor" Color="#999">
        </SolidColorBrush>
        <SolidColorBrush x:Key="selectColor" Color="#9DC8EB">
        </SolidColorBrush>
        <ColorAnimation  x:Key="highlight" From="#999" To="#FFF"  Duration="0:0:0.3"/>

        <ControlTemplate x:Key="itemsDataTemplate" >
            <StackPanel HorizontalAlignment="Stretch" >
                <StackPanel.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.VerticalOrientation}" Value="True">
                                <Setter Property="StackPanel.Orientation" Value="Horizontal" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.VerticalOrientation}" Value="False">
                                <Setter Property="StackPanel.Orientation" Value="Vertical" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Border Background="#4f4f4f" BorderBrush="{StaticResource defaultColor}" HorizontalAlignment="Stretch"  >
                    <Border.Style>
                        <Style>
                            <Setter Property="Border.BorderThickness" Value="0,1,0,0" />
                        </Style>
                    </Border.Style>
                    <StackPanel Height="85" MinWidth="100" VerticalAlignment="Stretch" >
                        <Path x:Name="icon" Data="{Binding ImageSource}" Stretch="Uniform" Width="50" Height="50" Margin="0,5,0,0" RenderTransformOrigin="0.5,0.5">
                           
                            <Path.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding IsHighlighted}" Value="False">
                                            <Setter Property="Path.Fill" Value="{StaticResource defaultColor}" />
                                        </DataTrigger>
                                        <DataTrigger  Binding="{Binding IsHighlighted}" Value="True">
                                            <Setter Property="Path.Fill" Value="{StaticResource highlightedColor}" />
                                        </DataTrigger>
                                        <DataTrigger  Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="Path.Fill" Value="{StaticResource selectColor}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5,0,0">
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"  TextAlignment="Center" >
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding IsHighlighted}" Value="False">
                                                <Setter Property="TextBlock.Foreground" Value="{StaticResource defaultColor}" />
                                            </DataTrigger>
                                            <DataTrigger  Binding="{Binding IsHighlighted}" Value="True">
                                                <Setter Property="TextBlock.Foreground" Value="{StaticResource highlightedColor}" />
                                            </DataTrigger>
                                            <DataTrigger  Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="TextBlock.Foreground" Value="{StaticResource selectColor}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </StackPanel>
                </Border>
                <ItemsControl ItemsSource="{Binding Children}"  >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel>
                                <StackPanel.Style>
                                    <Style>
                                        <Setter Property="StackPanel.Opacity" Value="0"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.VerticalOrientation}" Value="True">
                                                <Setter Property="StackPanel.Orientation" Value="Horizontal" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.VerticalOrientation}" Value="False">
                                                <Setter Property="StackPanel.Orientation" Value="Vertical" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="StackPanel.Opacity" Value="1" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <n:Vizual></n:Vizual>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ControlTemplate>
        <Style TargetType="{x:Type n:Vizual}">
            <Setter Property="Template" Value="{StaticResource ResourceKey=itemsDataTemplate}" />
        </Style>
    </ck:CKWindow.Resources>
    <Border Width="Auto" Height="Auto" CornerRadius="3" Margin="0,0,20,20" >
        <Border.Effect>
            <DropShadowEffect BlurRadius="10" Direction="-90" RenderingBias="Quality" ShadowDepth="4" Opacity="0.8"/>
        </Border.Effect>
        <StackPanel Orientation="Vertical" Focusable="False" x:Name="subPanel" >
            <DockPanel Height="32" Background="#4f4f4f" >
                <DockPanel.Style>
                    <Style>
                        <Setter Property="DockPanel.HorizontalAlignment" Value="Stretch" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VerticalOrientation}" Value="True">
                                <Setter Property="DockPanel.Width" Value="100" />
                                <Setter Property="DockPanel.HorizontalAlignment" Value="Left" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <Path DockPanel.Dock="Left"  Stretch="Uniform" Fill="{StaticResource defaultColor}" Width="20" Height="20" Margin="10 0" RenderTransformOrigin="0.5,0.5" >
                    <Path.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsScrollerActive}" Value="True">
                                    <Setter Property="Path.Data" Value="F1M-224.553,1265L-246.174,1283.52 -267.792,1302.04 -267.792,1265 -267.792,1227.97 -246.174,1246.49 -224.553,1265z" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsScrollerActive}" Value="False">
                                    <Setter Property="Path.Data" Value="M27.270001,0L44.310001,0 44.310001,48.643002 27.270001,48.643002z M0,0L17.040001,0 17.040001,48.643002 0,48.643002z" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
                <TextBlock DockPanel.Dock="Right" FontSize="12" Text="{Binding Key}" Foreground="{StaticResource defaultColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="10 0"/>
            </DockPanel>
            <Grid x:Name="panel" RenderTransformOrigin="0.5,0">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <ItemsControl ItemsSource="{Binding Elements}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel >
                                <StackPanel.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding VerticalOrientation}" Value="True">
                                                <Setter Property="StackPanel.Orientation" Value="Vertical" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding VerticalOrientation}" Value="False">
                                                <Setter Property="StackPanel.Orientation" Value="Horizontal" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <n:Vizual></n:Vizual>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </StackPanel>
    </Border>
</ck:CKWindow>
