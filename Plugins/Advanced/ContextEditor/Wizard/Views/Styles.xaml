<ResourceDictionary x:Class="ContextEditor.Styles"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d">

    <Style TargetType="{x:Type Window}">
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="Topmost" Value="False"/>
    </Style>

    <LinearGradientBrush x:Key="ButtonOverBrush"  EndPoint="0.017,0.032" StartPoint="0.974,0.971">
        <GradientStop Color="White"/>
        <GradientStop Color="Transparent" Offset="0.726"/>
    </LinearGradientBrush>

    <ControlTemplate  x:Key="NoFocusButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border CornerRadius="5">
            <mwt:ButtonChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" Name="Chrome" SnapsToDevicePixels="True">
                <ContentPresenter RecognizesAccessKey="True" 
                                  Margin="{TemplateBinding Control.Padding}"
                                  Content="{TemplateBinding ContentControl.Content}" 
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
            </mwt:ButtonChrome>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush>#FFADADAD</SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" x:Key="NoFocusSelectableButtonStyle">
        <Setter Property="Control.Template" Value="{StaticResource NoFocusButtonTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Button.Background" Value="{StaticResource ButtonOverBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                <Setter Property="Button.Background" Value="Transparent"/>
            </DataTrigger>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Background">
                    <!--Value="#FFA3C9D6"-->
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="-0.117562,0.418708" EndPoint="-0.117562,0.418708">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NoFocusSelectableButtonStyle}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtonStyle}">
        <Style.Triggers>
            <DataTrigger Value="False" Binding="{Binding ActiveItem.HideBack}">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding ActiveItem.CanGoBack}">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding ActiveItem.CanGoBack}">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding ActiveItem.HideBack}">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ForwardButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NavigationButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActiveItem.IsLastStep}" Value="True">
                <Setter x:Uid="wizard-manager-template-forward-button-exit" Property="Content" Value="Exit" />
                <Setter Property="Command" Value="{Binding CloseCommand}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveItem.IsLastStep}" Value="False">
                <Setter x:Uid="wizard-manager-template-forward-button-next" Property="Content" Value="Next" />
                <Setter Property="Command" Value="{Binding GoFurtherCommand}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="WizardTitleTextBlockStyle">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="WizardDescTextBlockStyle">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#FF5A5A5A" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="RoundedTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFD0D1D4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" 
                			x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                			BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                        <ScrollViewer HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
