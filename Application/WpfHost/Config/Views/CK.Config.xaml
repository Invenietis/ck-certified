<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:pluginConfig="clr-namespace:CK.Plugin.Config;assembly=CK.Plugin.Config"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ck="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
                    xmlns:local="clr-namespace:Host.VM"
                    xmlns:cal="http://www.caliburnproject.org">

    <Style TargetType="Border" x:Key="Rounded">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Margin" Value="0 5 0 0"></Setter>
        <Setter Property="Padding" Value="5 2"></Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ConfigLink" >
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Style="{StaticResource Rounded}" >
                        <ContentPresenter Margin="2"  VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FFEFEFEF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type ck:ConfigManager}">
        <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal" >
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC7C7C7" Offset="1" />
                        <GradientStop Color="White" Offset="0" />
                    </LinearGradientBrush>
                </StackPanel.Background>
                <Button Margin="3" Command="{Binding GoBackCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="BackArrow" Width="16" Height="16" Source="Back.png" />
                        <ContentPresenter Margin="5 0 0 0" Content="{Binding Path=Previous.DisplayName}"/>
                    </StackPanel>
                </Button>
            </StackPanel>
            <Border HorizontalAlignment="Stretch" CornerRadius="2" Background="White" Margin="3" Padding="5" BorderThickness="1" BorderBrush="Gray" >
                <ItemsControl ItemsSource="{Binding ActiveItem.Items}" ItemTemplateSelector="{DynamicResource ConfigSelector}" Margin="5" />
            </Border>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Previous}" Value="{x:Null}">
                <Setter TargetName="BackArrow" Property="Opacity" Value="0.3"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ConfigGroupTemplate">
        <Border HorizontalAlignment="Stretch" Style="{StaticResource Rounded}" >
            <ItemsControl ItemsSource="{Binding Items}" ItemTemplateSelector="{DynamicResource ConfigSelector}" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ConfigActivableSection">
        <DockPanel>
            <CheckBox HorizontalAlignment="Center" FontSize="14" DockPanel.Dock="Top" IsChecked="{Binding Value}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Uid="activate-activablesection">Activate</TextBlock>
                    <TextBlock FontWeight="Bold" Margin="5 0 0 0" Text="{Binding DisplayName}" ToolTip="{Binding Description}"/>
                </StackPanel>
            </CheckBox>
            <Border Name="border" Style="{StaticResource Rounded}">
                <ItemsControl IsEnabled="{Binding Value}" ItemsSource="{Binding Items}" ItemTemplateSelector="{DynamicResource ConfigSelector}"/>
            </Border>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Value}" Value="False">
                <Setter TargetName="border" Property="TextElement.Foreground" Value="#888888"/>
                
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="border">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="border">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ck:RuleBasedTemplateSelector x:Key="ConfigSelector">

        <!-- Specific templates. -->
        <ck:SelectorByTypeRule Type="{ck:Type ck:IConfigItemProperty`1, TypeArgument0={ck:Type pluginConfig:IUserProfileCollection} }" ExactTypeMatch="True" >
            <DataTemplate>
                <DockPanel LastChildFill="False">
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center" Content="{Binding DisplayName}"/>
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center" FontWeight="DemiBold" Content="{Binding Value.LastProfile.Name}">
                        <Label.ToolTip>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter Content="Address : " />
                                    <ContentPresenter Content="{Binding Value.LastProfile.Address}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter Content="Type : "/>
                                    <ContentPresenter Content="{Binding Value.LastProfile.Type}" />
                                </StackPanel>
                            </StackPanel>
                        </Label.ToolTip>
                    </Label>
                    <!-- Then comes, on the right, the description and the image. -->
                    <Image DockPanel.Dock="Right" Stretch="None" Source="{Binding ImagePath}" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                </DockPanel>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <ck:SelectorByTypeRule Type="{x:Type ck:ConfigItemMillisecondProperty}">
            <DataTemplate>
                <DockPanel LastChildFill="False" Margin="3">
                    <TextBlock DockPanel.Dock="Right" Margin="0 0 3 0">ms</TextBlock>
                    <ck:NumericUpDown DockPanel.Dock="Right" IntValue="{Binding Path=Value, Mode=TwoWay}" MaxValue="10000" MinValue="1000" Step="100" Width="50" Margin="0 0 3 0"/>
                    <TextBlock DockPanel.Dock="Left" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                    <Image DockPanel.Dock="Left" Stretch="None" Source="{Binding ImagePath}" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                </DockPanel>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <ck:SelectorByTypeRule Type="{x:Type local:ConfigFeatureStarter}">
            <DataTemplate>
                <DockPanel Margin="3" Name="featureContainer" LastChildFill="False">
                    <!--<ToggleButton DockPanel.Dock="Right">
                        <ContentPresenter Name="statename" Margin="5 0" Content="Stopped"/>
                    </ToggleButton>-->
                    <Button x:Uid="configfeatureselector-disable" Name="disable" Content="Disable" IsEnabled="False" DockPanel.Dock="Right" Padding="5 2" Command="{Binding Stop}" />
                    <Button x:Uid="configfeatureselector-enable" Name="enable" Content="Enable" DockPanel.Dock="Right" Padding="5 2" Margin="3 0" Command="{Binding Start}" />
                    <TextBlock x:Uid="configfeatureselector-featurename" DockPanel.Dock="Left" Text="Enable" VerticalAlignment="Center"/>
                    <TextBlock FontWeight="Bold" DockPanel.Dock="Left" Margin="2 0 0 0" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                    <Image DockPanel.Dock="Left" Stretch="None" Source="{Binding ImagePath}" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsRunning}" Value="True">                    
                        <Setter TargetName="enable" Property="IsEnabled" Value="False"/>
                        <Setter TargetName="disable" Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsRunnable}" Value="False">
                        <Setter TargetName="featureContainer" Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <!-- Start of the general templates. -->
        <ck:SelectorByTypeRule Type="{x:Type ck:IConfigActivableSection}" Template="{StaticResource ConfigActivableSection}"/>

        <ck:SelectorByTypeRule Type="{x:Type ck:ConfigGroup}" Template="{StaticResource ConfigGroupTemplate}" />
        
        <ck:SelectorByTypeRule Type="{ck:Type ck:IConfigItemProperty-1, TypeArgument0={ck:Type sys:Boolean}}" >
            <DataTemplate>
                <DockPanel LastChildFill="False" Margin="3">
                    <CheckBox DockPanel.Dock="Right" VerticalAlignment="Center" IsChecked="{Binding Value}" Margin="0 0 3 0"/>
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding DisplayName}"/>
                    <Image DockPanel.Dock="Left" Stretch="None" Source="{Binding ImagePath}" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                </DockPanel>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <ck:SelectorByTypeRule Type="{ck:Type ck:IConfigItemProperty-1, TypeArgument0={ck:Type sys:Int32}}">
            <DataTemplate>
                <DockPanel LastChildFill="False" Margin="3">
                    <TextBox DockPanel.Dock="Right" Text="{Binding Path=Value, Mode=TwoWay}" Width="50" Margin="0 0 3 0"/>
                    <TextBlock DockPanel.Dock="Left" Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                    <Image DockPanel.Dock="Left" Stretch="None" Source="{Binding ImagePath}" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                </DockPanel>
            </DataTemplate>
        </ck:SelectorByTypeRule>
        
        <ck:SelectorByTypeRule Type="{x:Type ck:ConfigItemAction}" >
            <DataTemplate>
                <Button Style="{StaticResource ConfigLink}" HorizontalContentAlignment="Stretch" Command="{Binding ActionCommand}">
                    <DockPanel LastChildFill="False"> 
                        <TextBlock VerticalAlignment="Center" DockPanel.Dock="Left" Text="{Binding DisplayName}"/>
                        <Image DockPanel.Dock="Right" Stretch="None">
                            <Image.Source>
                                <Binding>
                                    <Binding.Source>ImagePath</Binding.Source>
                                    <Binding.FallbackValue>
                                        <ImageSource>Gear.png</ImageSource>
                                    </Binding.FallbackValue>
                                </Binding>
                            </Image.Source>
                        </Image>
                        <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                    </DockPanel>
                </Button>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <ck:SelectorByTypeRule Type="{x:Type ck:ConfigItemLink}" >
            <DataTemplate>
                <Button HorizontalContentAlignment="Stretch" Command="{Binding GotoCommand}" Style="{StaticResource ConfigLink}">
                    <DockPanel LastChildFill="False">
                        <TextBlock VerticalAlignment="Center" DockPanel.Dock="Left" Text="{Binding DisplayName}"/>
                        <Image Name="image" DockPanel.Dock="Right" Stretch="None" >
                            <Image.Source>
                                <Binding>
                                    <Binding.Source>ImagePath</Binding.Source>
                                    <Binding.FallbackValue>
                                        <ImageSource>Forward.png</ImageSource>
                                    </Binding.FallbackValue>
                                </Binding>
                            </Image.Source>
                        </Image>
                        <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0,0,10,0"/>
                    </DockPanel>
                </Button>
            </DataTemplate>
        </ck:SelectorByTypeRule>

        <!-- This one is very general: any IConfigItemCurrent<> will match. -->
        <ck:SelectorByTypeRule Type="{ck:Type ck:IConfigItemCurrent-1, TypeArgument0={ck:Type sys:Object}}" >
            <DataTemplate>
                <DockPanel>
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center" Content="{Binding DisplayName}"/>
                    <Label DockPanel.Dock="Left" FontWeight="DemiBold" Visibility="{Binding ShowOne}" Content="{Binding Values.CurrentItem}"></Label>
                    <!-- Then comes, on the right, the description and the image. -->
                    <Image DockPanel.Dock="Right" Stretch="None" Source="{Binding ImagePath}" Margin="0 0 5 0" />
                    <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" FontStyle="Italic" Text="{Binding Description}" Margin="0 0 5 0"/>
                    <ComboBox Visibility="{Binding ShowMultiple}" FontSize="12" Margin="3" ItemsSource="{Binding Values}" IsSynchronizedWithCurrentItem="True" />
                </DockPanel>
            </DataTemplate>
        </ck:SelectorByTypeRule>

    </ck:RuleBasedTemplateSelector>

</ResourceDictionary>