<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CK.Plugin.Discoverer.Runner</name>
    </assembly>
    <members>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginDiscoverer.Discover(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            For each FileInfo in _currentFiles, Process will try to create a new PluginAssemblyInfo
            based on the FileInfo (that is currently processed).
            After that, this method fill properties collections with IPluginInfo or IServiceInfo.
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginDiscoverer.RegisterUseServiceInfo(System.Type,System.Boolean)">
            <summary>
            Called when a reference to a service is found (ex: CommonTimerWindow needs ICommonTimer service).
            The resulting <see cref="F:CK.Plugin.Discoverer.Runner.ServiceRefInfo.Reference"/> is null 
            (if the type is a generic interface other than IService&lt;&gt;)
            OR
            (the type is not a IDynamicService and registerOnlyIDynamicService is true)
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginDiscoverer.IsIDynamicService(System.Type)">
            <summary>
            The Type.IsAssignableFrom method can not work between types loaded in ReflectionOnly and types loaded normally.
            Since we are referencing CK.Plugin.Model assembly, its types are not loaded in the ReflectionOnly space.
            This methods returns false if the type is the IDynamicService itself.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.DiscoveredInfo">
            <summary>
            Base class for all discovered object.
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.DiscoveredInfo.HasError">
            <summary>
            Gets whether a non empty <see cref="P:CK.Plugin.Discoverer.Runner.DiscoveredInfo.ErrorMessage"/> exists.
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.DiscoveredInfo.ErrorMessage">
            <summary>
            Gets the error message related to the discovering of the object.
            </summary>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.R">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.AssemblyNotFoundForDynamicService">
            <summary>
              Looks up a localized string similar to Unable to locate the definition of the Dynamic Service (assembly not found)..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.DuplicateEditConfigurationProperty">
            <summary>
              Looks up a localized string similar to Property {0} defines the same Configuration accessor as {1}..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.DynamicServiceAttributeRequiresIDynamicService">
            <summary>
              Looks up a localized string similar to Use of DynamicServiceAttribute requires a property that supports IDynamicService interface..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.GenericServiceOtherThanIServiceNotSupported">
            <summary>
              Looks up a localized string similar to Generic service other than Ck.Plugin.IService&lt;&gt; is not supported..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.ImplementedServiceIsOnError">
            <summary>
              Looks up a localized string similar to Implemented Service is on error..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.MultipleServiceImplementation">
            <summary>
              Looks up a localized string similar to A plugin can implement at most one IDynamicService..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.NotWritableServiceType">
            <summary>
              Looks up a localized string similar to Service property is not writable (setter must be defined)..
            </summary>
        </member>
        <member name="P:CK.Plugin.Discoverer.Runner.R.PluginImplementIService">
            <summary>
              Looks up a localized string similar to A plugin must not implement any IService&lt;T&gt;: it must implement the T interface..
            </summary>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.PluginInfo">
            <summary>
            Defines the basic information of a plugin.
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginInfo.#ctor(System.String)">
            <summary>
            Initializes a plugin info with an error.
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginInfo.#ctor(System.Reflection.CustomAttributeData)">
            <summary>
            Initializes a new PluginInfo based on the <see cref="T:CK.Plugin.PluginAttribute"/> configuration.
            </summary>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.SimplePropertyInfo">
            <summary>
             Contains property's basic info.
            </summary>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.SimpleMethodInfo">
            <summary>
             Contains a method's basic info
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.PluginAssemblyInfo.ReadAllTypes(System.Func{CK.Plugin.Discoverer.Runner.PluginAssemblyInfo,System.Type,CK.Plugin.Discoverer.Runner.ServiceInfo},System.Func{System.Type,System.Boolean,CK.Plugin.Discoverer.Runner.ServiceRefInfo})">
            <summary>
            Read all Type in the assembly.
            </summary>
            <param name="RegisterServiceInfo">Will be called for each discovered service interface.</param>
            <param name="RegisterUseServiceInfo">Will be called for each discovered service reference.</param>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.SimpleEventInfo">
            <summary>
            Contains an event's basic info
            </summary>
        </member>
        <member name="M:CK.Plugin.Discoverer.Runner.SimpleEventInfo.CompareTo(CK.Plugin.Discoverer.Runner.SimpleEventInfo)">
            <summary>
            Compares the names of the events
            </summary>
            <param name="other"></param>
            <returns>1 if other is "less" than the current object, 0 if the two have the same name, -1 otherwise</returns>
        </member>
        <member name="T:CK.Plugin.Discoverer.Runner.SimpleParameterInfo">
            <summary>
            Contains a parameter's basic info
            </summary>
        </member>
    </members>
</doc>
