<Window x:Class="SimpleSkin.SkinWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:view="http://shemas.civikey.org/StandardViews"
    xmlns:ctrls="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
    xmlns:vm="clr-namespace:SimpleSkin.ViewModels"
    Background="Transparent" WindowStyle="None"
    Topmost="True" WindowStartupLocation="Manual"
    Left="{Binding Mode=TwoWay, Path=X}" Top="{Binding Mode=TwoWay, Path=Y}"
    Width="{Binding Mode=TwoWay, Path=ViewportWidth}" Height="{Binding Mode=TwoWay, Path=ViewportHeight}"
    Title="Simple skin">
    <Window.Resources>
        
        <ctrls:NotNullConverter x:Key="notnull"/>

        <Style TargetType="{x:Type view:StdKeyboardView}">
            <Setter Property="Width" Value="{Binding W}" />
            <Setter Property="Height" Value="{Binding H}" />
            <Setter Property="Keys" Value="{Binding Keys}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Keyboard.Background, Converter={StaticResource notnull}}" Value="true">
                    <Setter Property="Background" Value="{Binding Background}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Keyboard.BackgroundImagePath, Converter={StaticResource notnull}}" Value="true">
                    <Setter Property="BackgroundImagePath" Value="{Binding BackgroundImagePath}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type view:StdKeyView}">
            <Setter Property="Width" Value="{Binding Width}"/>
            <Setter Property="Height" Value="{Binding Height}"/>
            <Setter Property="UpLabel" Value="{Binding UpLabel}"/>
            <Setter Property="DownLabel" Value="{Binding DownLabel}"/>
            <Setter Property="Visibility" Value="{Binding Visible}"/>
            <Setter Property="ShowLabel" Value="{Binding ShowLabel}"/>
            <Setter Property="KeyDownCommand" Value="{Binding KeyDownCommand}"/>
            <Setter Property="KeyUpCommand" Value="{Binding KeyUpCommand}"/>
            <Setter Property="KeyPressedCommand" Value="{Binding KeyPressedCommand}"/>
            <Setter Property="Opacity" Value="{Binding Opacity}"/>
            <Setter Property="FontStyle" Value="{Binding FontStyle}"/>
            <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
            <Setter Property="FontSize" Value="{Binding FontSize}"/>
            <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />
        </Style>

        <DataTemplate DataType="{x:Type vm:VMKeySimple}">
            <view:StdKeyView x:Name="key">
                <view:StdKeyView.Background>
                    <SolidColorBrush Color="{Binding Background}"/>
                </view:StdKeyView.Background>
                <view:StdKeyView.HoverBackground>
                    <SolidColorBrush Color="{Binding HoverBackground}"/>
                </view:StdKeyView.HoverBackground>
                <view:StdKeyView.PressedBackground>
                    <SolidColorBrush Color="{Binding PressedBackground}"/>
                </view:StdKeyView.PressedBackground>
                <view:StdKeyView.Foreground>
                    <SolidColorBrush Color="{Binding LetterColor}"/>
                </view:StdKeyView.Foreground>
            </view:StdKeyView>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Image, Converter={StaticResource notnull}}" Value="true">
                    <Setter TargetName="key" Property="ShowLabel" Value="false"/>
                    <Setter TargetName="key" Property="CustomContent" Value="{Binding Image}" />
                </DataTrigger>
                <!--<DataTrigger Binding="{Binding IsFallback}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard AutoReverse="True">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="key">
                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="Red"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="key">
                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="Red"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <Setter TargetName="key" Property="BorderBrush" Value="Red"/>
                    <Setter TargetName="key" Property="Opacity" Value="0.8"/>
                </DataTrigger>-->
            </DataTemplate.Triggers>
        </DataTemplate>
        
    </Window.Resources>
    <Viewbox Stretch="Fill" x:Name="MainContainer">
        <view:StdKeyboardView OutsideBorderThickness="0" InsideBorderThickness="0" Margin="0" x:Name="keyboardView" DataContext="{Binding Keyboard}" />
    </Viewbox>
</Window>
