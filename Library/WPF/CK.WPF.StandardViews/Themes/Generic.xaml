<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CK.WPF.StandardViews"
    xmlns:controls="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls">

    <controls:StringIsNullOrWhiteSpaceToBoolean x:Key="StringIsNullOrWhiteSpaceToBoolean" />

    <Style TargetType="{x:Type local:StdKeyboardView}">
        <Setter Property="Width" Value="500" />
        <Setter Property="Height" Value="350" />
        <Setter Property="OutsideBorderThickness" Value="1"/>
        <Setter Property="OutsideBorderColor" Value="Gray"/>
        <Setter Property="InsideBorderThickness" Value="0"/>
        <Setter Property="Opacity" Value="1"/>
        <!-- OutsideBorderColor -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StdKeyboardView}">
                    <Grid Focusable="False" Opacity="{TemplateBinding Opacity}">
                        <Border x:Name="OutsideBorder" BorderThickness="{TemplateBinding OutsideBorderThickness}" 
                                BorderBrush="{TemplateBinding OutsideBorderColor}">
                            <Border x:Name="InsideBorder" BorderThickness="{TemplateBinding InsideBorderThickness}" 
                                BorderBrush="{TemplateBinding InsideBorderColor}"
                                Background="{TemplateBinding Background}">
                            </Border>
                        </Border>
                        <ItemsControl Focusable="False" ItemsSource="{TemplateBinding Keys}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:StdKeyView}">
        <!-- Border brush -->
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF999999" Offset="0"/>
                    <GradientStop Color="#FFBBBBBB" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <!-- All about font -->
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Foreground" Value="Black"/>
        <!-- BackgroundBrush -->
        <Setter Property="Background" Value="White" />
        <Setter Property="HoverBackground" Value="White" />
        <Setter Property="PressedBackground" Value="White" />
        <!-- Template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StdKeyView}">
                    <Grid Focusable="False" x:Name="buttonGrid" Canvas.ZIndex="{TemplateBinding ZIndex}">
                        <Grid.ToolTip>
                            <ToolTip x:Name="gridTooltip" Content="{TemplateBinding Description}"/>
                        </Grid.ToolTip>
                        <Border x:Name="Border" CornerRadius="5"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1.5"
                                Background="{TemplateBinding Background}" />
                        <Border CornerRadius="5" x:Name="GradientMask"
                                BorderBrush="Transparent" BorderThickness="1.5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Transparent" Offset="0"/>
                                    <GradientStop Color="#24000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <TextBlock x:Name="Letter"
                                   Foreground="{TemplateBinding Foreground}" 
                                   Text='{TemplateBinding UpLabel}' 
                                   Focusable="False" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"  TextDecorations="{TemplateBinding TextDecorations}"
                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                               TextTrimming="CharacterEllipsis" >
                        </TextBlock>

                        <ContentPresenter x:Name="Image" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding CustomContent}" Width="32"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="gridTooltip" Property="Content" Value="">
                            <Setter TargetName="gridTooltip" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <!-- Trigger on : IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}"/>
                        </Trigger>
                        <!-- Trigger on : IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}"/>
                            <Setter TargetName="GradientMask" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#24000000" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Letter" Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent},  Path=UpLabel}"/>
                        </Trigger>
                        <!-- Trigger on : ShowLabel -->
                        <Trigger Property="ShowLabel" Value="False">
                            <Setter TargetName="Letter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="controls:TextBlockService.IsTextTrimmed" Value="True" SourceName="Letter">
                            <Setter TargetName="buttonGrid" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UpLabel}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
