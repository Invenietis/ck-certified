<ResourceDictionary x:Class="ContextEditor.Views"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ckcore="clr-namespace:CK.Windows;assembly=CK.Windows.Core"
             xmlns:ckconf="clr-namespace:CK.Windows.Config;assembly=CK.Windows.Config"
             xmlns:ckcontrols="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
             xmlns:views="clr-namespace:ContextEditor.s"
             xmlns:viewmodels="clr-namespace:ContextEditor.ViewModels"
             xmlns:local="clr-namespace:ContextEditor"
             xmlns:s="clr-namespace:System;assembly=mscorlib" 
             xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CK.Windows.Config;component/Views/CK.Config.xaml"/>
        <ResourceDictionary>
            <StaticResource x:Key="OriginalConfigPageSelector" ResourceKey="CK.Config.DefaultPageSelector" />
            <StaticResource x:Key="OriginalConfigItemSelector" ResourceKey="CK.Config.DefaultItemSelector" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <ckcore:CompositeDataTemplateSelector Fallback="{StaticResource OriginalConfigPageSelector}" x:Key="CK.Config.DefaultPageSelector">
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:HomeViewModel}" >
            <DataTemplate>
                <views:HomeView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:KeyboardProfileViewModel}" >
            <DataTemplate>
                <views:KeyboardProfileView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:KeyboardListViewModel}" >
            <DataTemplate>
                <views:KeyboardListView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:KeyboardEditionViewModel}" >
            <DataTemplate>
                <views:KeyboardEditionView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:SavingStepViewModel}" >
            <DataTemplate>
                <views:SavingStepView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:ContextListViewModel}" >
            <DataTemplate>
                <views:ContextListView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:EndingStepViewModel}" >
            <DataTemplate>
                <views:EndingStepView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
        <ckcore:TypeDataTemplateSelector Type="{ckcore:Type viewmodels:SaveAsStepViewModel}" >
            <DataTemplate>
                <views:SaveAsStepView/>
            </DataTemplate>
        </ckcore:TypeDataTemplateSelector>
    </ckcore:CompositeDataTemplateSelector>

    <DataTemplate DataType="{x:Type local:WizardManager}">
        <DataTemplate.Resources>
            <ckcore:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConv" />
            <ckcontrols:AndMultiValueConverter x:Key="AndMultiValueConverter"/>
        </DataTemplate.Resources>
        <!--<ScrollViewer>-->
        <StackPanel Orientation="Vertical"  Margin="10 5 10 20">
                <StackPanel>
                    <StackPanel.Visibility>
                        <Binding Path="ActiveItem.Title">
                            <Binding.Converter>
                                <ckcontrols:ValueConverterGroup>
                                    <ckcontrols:StringIsNullOrWhiteSpaceToBoolean/>
                                    <ckcontrols:NotConverter/>
                                    <ckcore:BooleanToVisibilityConverter/>
                                </ckcontrols:ValueConverterGroup>
                            </Binding.Converter>
                        </Binding>
                    </StackPanel.Visibility>
                    <TextBlock Text="{Binding ActiveItem.Title}" FontSize="25" FontWeight="Bold" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding ActiveItem.Description}" FontSize="15" Foreground="Gray" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                </StackPanel>
                <DockPanel LastChildFill="True">
                    <ContentControl DockPanel.Dock="Top" Content="{Binding ActiveItem}" ContentTemplateSelector="{DynamicResource CK.Config.DefaultPageSelector}"/>
                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="0 20 0 0">
                    <Button Height="50" Width="150" DockPanel.Dock="Left" Margin="3" Command="{Binding GoBackCommand}" Content="Retour" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Value="False" Binding="{Binding ActiveItem.HideBack}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding ActiveItem.CanGoBack}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding ActiveItem.CanGoBack}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                    <DataTrigger Value="True" Binding="{Binding ActiveItem.HideBack}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <!--<Button.Visibility>
                            <Binding>
                                <MultiBinding Converter="{StaticResource AndMultiValueConverter}">
                                    <MultiBinding.Converter>
                                        <ckcontrols:ValueConverterGroup>
                                            <ckcontrols:AndMultiValueConverter/>
                                        
                                        </ckcontrols:ValueConverterGroup>
                                    </MultiBinding.Converter>
                                    <Binding Path="ActiveItem.CanGoBack" />
                                    <Binding Path="ActiveItem.HidePrevious"/>
                                </MultiBinding>
                            </Binding>
                            <ckcore:BooleanToVisibilityConverter/>
                        </Button.Visibility>-->
                    </Button>
                    <Button Height="50" Width="150" DockPanel.Dock="Right" Margin="3" IsEnabled="{Binding ActiveItem.CanGoFurther}" VerticalAlignment="Bottom">
                            <Button.Visibility>
                                <Binding Path="ActiveItem.HideNext" Converter="{StaticResource BooleanToVisibilityConv}" ConverterParameter="Invert,Hidden"/>
                            </Button.Visibility>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveItem.IsLastStep}" Value="True">
                                            <Setter Property="Content" Value="Terminer" />
                                            <Setter Property="Command" Value="{Binding CloseCommand}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ActiveItem.IsLastStep}" Value="False">
                                            <Setter Property="Content" Value="Suivant" />
                                            <Setter Property="Command" Value="{Binding GoFurtherCommand}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DockPanel>
                </DockPanel>
            </StackPanel>
        <!--</ScrollViewer>-->
    </DataTemplate>
</ResourceDictionary>
