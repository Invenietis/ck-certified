<UserControl x:Class="KeyboardEditor.s.KeyboardEditionView"
             xmlns:view="clr-namespace:CK.WPF.StandardViews;assembly=CK.WPF.StandardViews"
             xmlns:cce="clr-namespace:Microsoft.Windows.Controls;assembly=CK.WPF.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ctrls="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
             xmlns:ckwincore="clr-namespace:CK.Windows;assembly=CK.Windows.Core"
             xmlns:local="clr-namespace:KeyboardEditor.s"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:KeyboardEditor.ViewModels"
             mc:Ignorable="d" Width="Auto" Height="Auto">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/KeyboardEditor;component/KeyboardEdition/Views/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/KeyboardEditor;component/Wizard/Views/Images.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="OtherTemplate">
                <Button Style="{StaticResource StandardButtonStyle}" IsEnabled="False" VerticalAlignment="Center" Content="{Binding Name}" />
            </DataTemplate>

            <DataTemplate x:Key="KeyModeBaseTemplate">
                <StackPanel Orientation="Vertical">
                    <Button Style="{StaticResource StandardButtonStyle}" IsEnabled="False" VerticalAlignment="Center" Content="{Binding SectionName}" />
                    <Button Style="{StaticResource StandardButtonStyle}" IsEnabled="False" VerticalAlignment="Center" Content="{Binding ModeName}" />
                </StackPanel>
            </DataTemplate>

            <ctrls:FolderConverter x:Key="folderConverter"/>
            <vm:ModeTypeToSelectedConverter x:Key="modeTypeToSelectedConverter"/>
            <vm:BreadcrumbTemplateSelector x:Key="breadcrumbTemplateSelector" KeyModeBaseTemplate="{StaticResource KeyModeBaseTemplate}" OtherTemplate="{StaticResource OtherTemplate}"/>

            <Style TargetType="{x:Type TabControl}" x:Key="KeyEditionUCStyle">
                <Setter Property="Background" Value="White"/>
            </Style>

            <!-- When editing a key -->
            <DataTemplate x:Key="KeyEditionDataTemplate">
                <UniformGrid Columns="2">
                    <DockPanel MinHeight="100" LastChildFill="True">
                        <Button DockPanel.Dock="Left" Command="{Binding SelectKeyModeCommand}" 
                                Style="{StaticResource ModernUIButtonStyle}"
                                Content="Content and Actions" 
                                Margin="5">
                        </Button>
                    </DockPanel>
                    <DockPanel MinHeight="100" LastChildFill="True">
                        <Button DockPanel.Dock="Right" Command="{Binding SelectLayoutKeyModeCommand}" 
                                Style="{StaticResource ModernUIButtonStyle}"
                                Margin="5">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Design" />
                                <TextBlock Text="(Background, Font, Dimensions and Position)" />
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </UniformGrid>
            </DataTemplate>

            <!-- When editing a KeyMode -->
            <DataTemplate x:Key="KeyModeEditionDataTemplate">
                <local:KeyModeEditionUserControl DataContext="{Binding}"/>
            </DataTemplate>

            <!-- When editing a LayoutKeyMode -->
            <DataTemplate x:Key="LayoutKeyModeEditionDataTemplate">
                <local:LayoutKeyEditionUserControl DataContext="{Binding}"  />
            </DataTemplate>

            <!-- When editing a keyboard -->
            <DataTemplate x:Key="KeyboardEditionDataTemplate">
                <TabControl Style="{StaticResource KeyEditionUCStyle}">
                    <TabItem x:Uid="keyboard-editor-keyboard-tabitem-aspect" Header="Aspect">
                        <local:KeyboardEditionUserControl DataContext="{Binding}"/>
                    </TabItem>
                </TabControl>
            </DataTemplate>

            <!-- When editing a zone -->
            <DataTemplate x:Key="ZoneEditionDataTemplate">
                <TabControl Style="{StaticResource KeyEditionUCStyle}">
                    <TabItem x:Uid="keyboard-editor-zone-tabitem-aspect" Header="Aspect">
                        <local:ZoneEditionUserControl DataContext="{Binding}" />
                    </TabItem>
                </TabControl>
            </DataTemplate>

            <!-- Used to display the edition panel corresponding to the selected element's type -->
            <vm:KeyboardEditionTemplateSelector x:Key="KeyboardEditionTemplateSelector" 
                                                LayoutKeyModeEditionTemplate="{StaticResource LayoutKeyModeEditionDataTemplate}"
                                                KeyModeEditionTemplate="{StaticResource KeyModeEditionDataTemplate}"
                                                KeyEditionTemplate="{StaticResource KeyEditionDataTemplate}" 
                                                ZoneEditionTemplate="{StaticResource ZoneEditionDataTemplate}" 
                                                KeyboardEditionTemplate="{StaticResource KeyboardEditionDataTemplate}" />

            <!-- Style for the treeviewitem of a mode -->
            <Style x:Key="ActualModeKeyTreeViewStyle" TargetType="TreeViewItem" BasedOn="{StaticResource HeaderedSelectableTVI}">
                <Setter Property="vm:CustomContent.Content" Value="{DynamicResource CloudPath}"></Setter>
                <Setter Property="Header" Value="{Binding Name}"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Name}" Value="">
                        <Setter Property="Header" Value="default" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Style for the treeviewitem of a mode folder-->
            <Style x:Key="ModefolderTreeViewStyle" TargetType="TreeViewItem" BasedOn="{StaticResource HeaderedSelectableTVI}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ActualModeKeyTreeViewStyle}"></Setter>
                <Setter Property="ItemsSource" Value="{Binding Items}"/>
                <Setter Property="vm:CustomContent.Content" Value="{DynamicResource GridPath}"></Setter>
                <Setter Property="Header" Value="{Binding Name}"></Setter>
            </Style>

            <!-- Style for the treeviewitem of a key-->
            <Style x:Key="KeyTreeViewStyle" TargetType="TreeViewItem" BasedOn="{StaticResource HeaderedSelectableTVI}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ModefolderTreeViewStyle}"></Setter>
                <Setter Property="ItemsSource">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource folderConverter}" ConverterParameter="Modes,Layouts">
                            <Binding Path="KeyModes" />
                            <Binding Path="LayoutKeyModes" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="vm:CustomContent.Content" Value="{DynamicResource LayoutKeyPath}"></Setter>
                <Setter Property="Header" Value="{Binding UpLabel}"></Setter>
            </Style>

            <!-- Style for the treeviewitem of a zone-->
            <Style x:Key="ZoneTreeViewStyle" TargetType="TreeViewItem" BasedOn="{StaticResource HeaderedSelectableTVI}">
                <Setter Property="vm:CustomContent.Content" Value="{DynamicResource CloudPath}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource KeyTreeViewStyle}"></Setter>
                <Setter Property="ItemsSource" Value="{Binding Keys}"></Setter>
                <Setter Property="Header" Value="{Binding Name}"></Setter>
            </Style>

            <!-- Style for the treeviewitem of a keyboard-->
            <Style x:Key="KeyboardTreeViewStyle" TargetType="TreeViewItem" BasedOn="{StaticResource HeaderedSelectableTVI}">
                <Setter Property="vm:CustomContent.Content" Value="{DynamicResource KeyboardPath}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ZoneTreeViewStyle}"></Setter>
                <Setter Property="ItemsSource" Value="{Binding Zones}"></Setter>
                <Setter Property="Header" Value="{Binding Name}"></Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Border DataContext="{Binding EditedContext}" BorderThickness="1" BorderBrush="Black" CornerRadius="5">
        <Border.Resources>
            <!-- Override tree view items "selected" style -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
        </Border.Resources>
        <StackPanel Orientation="Horizontal">
            <!-- TreeView -->
            <TreeView DataContext="{Binding KeyboardVM}" Padding="20 0" MinWidth="100" MaxHeight="670">
                <TreeViewItem Style="{StaticResource KeyboardTreeViewStyle}"/>
            </TreeView>
            <Border>

                <!-- Modes -->
                <DockPanel LastChildFill="True">
                    <StackPanel Orientation="Horizontal" Margin="10 20" DockPanel.Dock="Top">
                        <TextBlock VerticalAlignment="Center" FontWeight="Bold" Text="Mode : " Margin="5 0" />
                        <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{Binding KeyboardVM.KeyboardModes}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="ModeColumn" />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton Grid.Row="0" Padding="3 2" IsChecked="{Binding IsChecked}" Content="{Binding Mode, Mode=OneWay}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Edition panel -->
                    <ContentControl  DockPanel.Dock="Bottom" ContentTemplateSelector="{StaticResource KeyboardEditionTemplateSelector}" Content="{Binding SelectedElement}" />

                    <!-- Breadcrumb -->
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <ItemsControl ItemsSource="{Binding SelectedElement.Parents}" Height="50">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="5" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Style="{StaticResource StandardButtonStyle}" VerticalAlignment="Center" Content="{Binding Name}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.SelectCommand}" CommandParameter="{Binding}" />
                                        <TextBlock Text=">" VerticalAlignment="Center" Margin="5 0" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ContentControl ContentTemplateSelector="{StaticResource breadcrumbTemplateSelector}" DataContext="{Binding SelectedElement}" Content="{Binding}"/>
                    </StackPanel>



                    <!-- Edited keyboard view -->
                    <Viewbox Stretch="Uniform" Grid.Column="1" DockPanel.Dock="Top">
                        <Grid MaxHeight="400" MaxWidth="1200">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <view:StdKeyboardView DataContext="{Binding KeyboardVM}" x:Name="KeyboardContainer"/>
                            </ScrollViewer>
                        </Grid>
                    </Viewbox>
                </DockPanel>
            </Border>
        </StackPanel>

    </Border>
</UserControl>
