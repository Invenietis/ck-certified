<UserControl x:Class="ContextEditor.s.LayoutKeyEditionUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrls="clr-namespace:CK.WPF.Controls;assembly=CK.WPF.Controls"
             xmlns:ckwincore="clr-namespace:CK.Windows;assembly=CK.Windows.Core"
             xmlns:view="clr-namespace:CK.WPF.StandardViews;assembly=CK.WPF.StandardViews"
             xmlns:vm="clr-namespace:ContextEditor.ViewModels"
             xmlns:cce="clr-namespace:Microsoft.Windows.Controls;assembly=CK.WPF.Controls"
              xmlns:local="clr-namespace:ContextEditor.s"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource KeyModeDisplayStyle}" x:Key="LayoutKeyModeWarningDisplayStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LayoutKeyModeVM.IsFallback}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type StackPanel}" BasedOn="{StaticResource KeyModeDisplayStyle}" x:Key="LayoutKeyModeOKDisplayStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LayoutKeyModeVM.IsFallback}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource Rounded}" x:Key="LayoutWarningRoundedStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LayoutKeyModeVM.IsFallback}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>
    <Border BorderThickness="1" CornerRadius="5" Background="White">
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Vertical">
                <DockPanel LastChildFill="False" Margin="5 5 5 0">
                    <Border Style="{StaticResource LayoutWarningRoundedStyle}" Background="#FFFCF8E3">
                        
                        <!-- Panel that warns the user that the mode values he is seing are the one of the mode after a fallback -->
                        <StackPanel Style="{StaticResource LayoutKeyModeWarningDisplayStyle}">
                            <StackPanel Orientation="Horizontal">
                            <Image Width="30" Height="30" Margin="5" Source="pack://application:,,,/ContextEditor;component/Resources/Images/warning.png" />
                                <StackPanel>
                                    <TextBlock Foreground="#FFC28C4E" TextWrapping="Wrap" VerticalAlignment="Center">The properties displayed are those of the key on the following mode :</TextBlock>
                                    <TextBlock Foreground="#FFD59853" FontSize="10" TextWrapping="Wrap" VerticalAlignment="Center">Click on the "+" button to edit the key for the mode selected above</TextBlock>
                                    <TextBlock Foreground="#FFD59853" FontSize="10" TextWrapping="Wrap" VerticalAlignment="Center">or click on the mode button to go back to this mode.</TextBlock>
                                </StackPanel>
                                <Button VerticalAlignment="Center" Margin="2 0" FontWeight="Bold" Command="{Binding LayoutKeyModeVM.ApplyToCurrentModeCommand}" >
                                    <ContentControl Content="{Binding LayoutKeyModeVM.Name}" />
                                </Button>
                                <Button Height="30" Margin="5" Command="{Binding CreateKeyModeCommand}" CommandParameter="LayoutKeyMode">
                                    <Button.ToolTip>
                                        <ToolTip>Create a new whole set of parameters for this key when in the current mode</ToolTip>
                                    </Button.ToolTip>
                                    <Image Width="20" Source="pack://application:,,,/ContextEditor;component/Resources/Images/plus.png"></Image>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <!-- Paenl shown when the displayed mode is not a fallback -->
                    <StackPanel Style="{StaticResource LayoutKeyModeOKDisplayStyle}" VerticalAlignment="Center">
                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center">Current mode :</TextBlock>
                        <ContentControl Margin="2 0" FontWeight="Bold" 
                                        DataContext="{Binding LayoutKeyModeVM, Mode=OneWay}" 
                                        Content="{Binding}" />
                    </StackPanel>
                </DockPanel>
                
                <!-- panel that wraps together all the layout configuration -->
                <StackPanel Orientation="Horizontal" IsEnabled="{Binding LayoutKeyModeVM.IsFallback, Converter={StaticResource notconverter}}" Margin="0 5">
                    
                    <!-- panel containing the different layout values : X, Y, Width, Height, IsVisible -->
                    <Border Style="{StaticResource GrayRounded}" Padding="0" Margin="5 0 5 5">
                        <StackPanel Margin="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Orientation="Horizontal" Margin="0 5">
                                    <TextBlock Grid.IsSharedSizeScope="True" VerticalAlignment="Center" Text="Visible : " Margin="2" />
                                    <CheckBox  IsChecked="{Binding IsVisible, Mode=TwoWay}" VerticalAlignment="Center"  Margin="2" Width="50" />
                                </StackPanel>
                                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                    <TextBlock Grid.IsSharedSizeScope="True" Text="X : " Margin="2" />
                                    <TextBox Text="{Binding LayoutKeyModeVM.X, UpdateSourceTrigger=PropertyChanged}" Margin="2" Width="50"></TextBox>
                                </StackPanel>
                                <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal">
                                    <TextBlock Grid.IsSharedSizeScope="True" Text="Y : " Margin="2" />
                                    <TextBox Text="{Binding LayoutKeyModeVM.Y, UpdateSourceTrigger=PropertyChanged}" Margin="2" Width="50"></TextBox>
                                </StackPanel>
                                <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" BorderThickness="0.5 0 0 0" BorderBrush="LightGray" HorizontalAlignment="Center" />
                                <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal">
                                    <TextBlock Grid.IsSharedSizeScope="True" Text="Width : " Margin="2" />
                                    <TextBox Text="{Binding LayoutKeyModeVM.Width, UpdateSourceTrigger=PropertyChanged}" Margin="2" Width="50"></TextBox>
                                </StackPanel>
                                <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                                    <TextBlock Grid.IsSharedSizeScope="True" Text="Height : " Margin="2" />
                                    <TextBox Text="{Binding LayoutKeyModeVM.Height, UpdateSourceTrigger=PropertyChanged}" Margin="2" Width="50"></TextBox>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                    
                    <!-- Panel that enables color edition -->
                    <local:GenericLayoutEditionUserControl />
                </StackPanel>
            </StackPanel>
            
            <!-- Delete actions -->
            <GroupBox DockPanel.Dock="Right" Header="Actions" Background="#FFF9F9F9" Padding="0" Margin="5 0">
                <StackPanel>
                    
                    <!-- Delete the key -->
                    <DockPanel LastChildFill="False" Margin="2">
                        <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center">Delete this key :</TextBlock>
                        <Button Height="24" Width="24" Margin="2" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding DeleteKeyCommand}">
                            <Image Source="pack://application:,,,/ContextEditor;component/Resources/Images/cancel.png"></Image>
                            <Button.ToolTip>
                                Delete this key
                            </Button.ToolTip>
                        </Button>
                    </DockPanel>

                    <!-- Delete the key mode -->
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center">Delete this mode : </TextBlock>
                        <Button DockPanel.Dock="Right" Width="24" Height="24" Margin="2" HorizontalAlignment="Right" Command="{Binding LayoutKeyModeVM.DeleteKeyModeCommand}" CommandParameter="LayoutKeyMode">
                            <Button.ToolTip>
                                <ToolTip>Delete this parameters, the key will not behave in a special manner when in the current mode anymore.</ToolTip>
                            </Button.ToolTip>
                            <Image Source="pack://application:,,,/ContextEditor;component/Resources/Images/cancel.png"></Image>
                        </Button>
                        <DockPanel.Style>
                            <Style TargetType="{x:Type DockPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentLayoutKeyModeModeVM.Mode.IsEmpty}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LayoutKeyModeVM.IsFallback}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>
                    </DockPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Border>
</UserControl>
