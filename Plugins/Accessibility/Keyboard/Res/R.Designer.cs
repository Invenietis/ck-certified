//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CK {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class R {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal R() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CK.Keyboard.Res.R", typeof(R).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default actual key can not be destroyed..
        /// </summary>
        internal static string DestroyDefaultKeyMode {
            get {
                return ResourceManager.GetString("DestroyDefaultKeyMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default actual key layout can not be destroyed..
        /// </summary>
        internal static string DestroyDefaultLayoutKeyMode {
            get {
                return ResourceManager.GetString("DestroyDefaultLayoutKeyMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured in editor: {0}.
        /// </summary>
        internal static string EditorException {
            get {
                return ResourceManager.GetString("EditorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import this keyboard.
        /// </summary>
        internal static string ImportKeyboardFail {
            get {
                return ResourceManager.GetString("ImportKeyboardFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to set a current Layout that belongs to another keyboard..
        /// </summary>
        internal static string InvalidSetLayout {
            get {
                return ResourceManager.GetString("InvalidSetLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        internal static string KeyboardAutoNumPattern {
            get {
                return ResourceManager.GetString("KeyboardAutoNumPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \s*\(\d+\)\s*$.
        /// </summary>
        internal static string KeyboardAutoNumRegex {
            get {
                return ResourceManager.GetString("KeyboardAutoNumRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to set an unknown keyboard as the current one..
        /// </summary>
        internal static string KeyboardErrorUnknown {
            get {
                return ResourceManager.GetString("KeyboardErrorUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key must belong to the same keyboard..
        /// </summary>
        internal static string KeyFromAnotherKeyboard {
            get {
                return ResourceManager.GetString("KeyFromAnotherKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The actual key must belong to the same keyboard..
        /// </summary>
        internal static string KeyModeFromAnotherKeyboard {
            get {
                return ResourceManager.GetString("KeyModeFromAnotherKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Push() method can not be called if the key is already down (IsDown property)..
        /// </summary>
        internal static string KeyPushWhenDown {
            get {
                return ResourceManager.GetString("KeyPushWhenDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Release() method must be called only when IsDown is true..
        /// </summary>
        internal static string KeyReleaseWhenUp {
            get {
                return ResourceManager.GetString("KeyReleaseWhenUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RepeatPressed() method must be called only when IsDown is true..
        /// </summary>
        internal static string KeyRepeatPressedWhenUp {
            get {
                return ResourceManager.GetString("KeyRepeatPressedWhenUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyboard&apos;s default layout can not be destroyed..
        /// </summary>
        internal static string LayoutDefaultDestroyed {
            get {
                return ResourceManager.GetString("LayoutDefaultDestroyed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyboard&apos;s default layout can not be renamed..
        /// </summary>
        internal static string LayoutDefaultRenamed {
            get {
                return ResourceManager.GetString("LayoutDefaultRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load context..
        /// </summary>
        internal static string LoadContextFail {
            get {
                return ResourceManager.GetString("LoadContextFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyboardMode: &apos;{0}&apos; must not be a composite mode (i.e. contains +)..
        /// </summary>
        internal static string ModeCompositeError {
            get {
                return ResourceManager.GetString("ModeCompositeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mode must be obtained from the same Context..
        /// </summary>
        internal static string ModeFromAnotherContext {
            get {
                return ResourceManager.GetString("ModeFromAnotherContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to change the mode of a {0} with an unavailable mode &apos;{1}&apos;..
        /// </summary>
        internal static string ModeObjectChangeUnavailableMode {
            get {
                return ResourceManager.GetString("ModeObjectChangeUnavailableMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to create a {0} with unavailable mode &apos;{1}&apos;..
        /// </summary>
        internal static string ModeObjectCreateUnavailableMode {
            get {
                return ResourceManager.GetString("ModeObjectCreateUnavailableMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must not be null nor empty.
        /// </summary>
        internal static string MustNotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("MustNotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while reading resources of {0}.
        /// </summary>
        internal static string ReadResourcesException {
            get {
                return ResourceManager.GetString("ReadResourcesException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml version must exist and be at least 2.5.1..
        /// </summary>
        internal static string XmlInvalidFormatVersion {
            get {
                return ResourceManager.GetString("XmlInvalidFormatVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyboard&apos;s default zone can not be destroyed..
        /// </summary>
        internal static string ZoneDefaultDestroyed {
            get {
                return ResourceManager.GetString("ZoneDefaultDestroyed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyboard&apos;s default zone can not be renamed..
        /// </summary>
        internal static string ZoneDefaultRenamed {
            get {
                return ResourceManager.GetString("ZoneDefaultRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The zone must belong to the same keyboard..
        /// </summary>
        internal static string ZoneFromAnotherKeyboard {
            get {
                return ResourceManager.GetString("ZoneFromAnotherKeyboard", resourceCulture);
            }
        }
    }
}
