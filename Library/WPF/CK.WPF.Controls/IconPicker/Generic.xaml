<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CK.WPF.Controls"
                    xmlns:coreConverters="clr-namespace:Microsoft.Windows.Controls.Core.Converters"
                    xmlns:chrome="clr-namespace:Microsoft.Windows.Controls.Chromes">

    <coreConverters:InverseBoolConverter x:Key="InverseBoolConverter" />

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="1" Color="#FFE8EBED"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="IconPaletteLisBoxStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid ToolTip="{Binding Name}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="1" Background="Transparent" BorderBrush="Transparent" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="IconItemTemplate">
        <Border DockPanel.Dock="Left" Margin="2" Width="40" Height="40">
            <TextBlock FontSize="36" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}" FontFamily="pack://application:,,,/CK.WPF.Controls;component/Resources/#FontAwesome" />
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type local:IconPicker}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconPicker}">
                    <Grid>
                        <ToggleButton HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="PART_IconPickerToggleButton" IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" IsTabStop="True" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <DockPanel LastChildFill="True">
                                <Path DockPanel.Dock="Right" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FF000000" Height="10" Margin="5 2" />
                                <TextBlock HorizontalAlignment="Center" Margin="5" FontSize="36" Text="{Binding SelectedIcon, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="pack://application:,,,/CK.WPF.Controls;component/Resources/#FontAwesome" />
                            </DockPanel>
                        </ToggleButton>

                        <Popup VerticalAlignment="Bottom" IsOpen="{TemplateBinding IsOpen}" StaysOpen="False" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" >

                            <Border BorderThickness="1" BorderBrush="#888888">
                                <Grid  Width="{Binding ElementName=PART_IconPickerToggleButton,Path=ActualWidth}" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock x:Uid="available-icons" Text="Available Icons" Background="AliceBlue" Padding="2" Margin="0,0,0,1" />
                                    <ListBox VirtualizingStackPanel.IsVirtualizing="True" x:Name="PART_Icons" Grid.Row="1" Background="White" Height="400" BorderThickness="0" SelectionMode="Single"
                                                         ItemsSource="{x:Static local:IconPicker.FontAwesomeLetters}"                                                      
                                                         ItemTemplate="{StaticResource IconItemTemplate}"
                                                         ItemContainerStyle="{StaticResource IconPaletteLisBoxStyle}"
                                                         Style="{x:Null}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <local:VirtualizingWrapPanel HorizontalAlignment="Center"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>